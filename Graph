#include <bits/stdc++.h>

using namespace std;

void DFS(int node,vector<int>adj[], vector<int>&vis){
    vis[node]=1;
    cout<<node<<endl;
    for(auto it:adj[node]){
        if(!vis[it]){
            DFS(it,adj,vis);
        }
    }
}
int main()
{
    //READING INPUT OF GRAPH
    
    //METHOD 1
    //1st one matrix means 2d array
    
    // int N,E;
    // int u,v;
    // cin>>N>>E;
    // int matrix[N+1][N+1];
    // for(int i=0;i<E;i++){
    //     cin>>u>>v;
    //     matrix[u][v]=1;
    //     matrix[v][u]=1;
    // }
    
    //METHOD 2
    //Adjacency list
    
    int N,E;
    cin>>N>>E;
    vector<int>adj[N+1];
    int u,v;
    for(int i=0;i<E;i++){
    cin>>u>>v;
    adj[u].push_back(v);
    adj[v].push_back(u);
    }
    
    vector<int>vis(N,0);
    DFS(1,adj,vis);
}
